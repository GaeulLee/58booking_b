<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="goodee.gdj58.booking_c.mapper.taehee.CompanyMapper3">
	<!-- 상품관리 -->
	<!-- 2) 등록 -->
	<insert id="insertProduct"  parameterType="goodee.gdj58.booking_c.vo.Product">
		INSERT booking_product(
				booking_company_id
				, booking_product_name
				, booking_product_price
				, booking_product_open
				, booking_product_min_people
				, booking_product_max_people
		) VALUES(
				#{companyId}
				, #{productName}
				, #{productPrice}
				, #{productOpen}
				, #{productMinPeople}
				, #{productMaxPeople});
		<selectKey resultType="int" keyProperty="productNo" keyColumn="booking_product_no" order="AFTER">
        	SELECT LAST_INSERT_ID()
    	</selectKey> 
	</insert>
	
	<!-- 1) 목록 -->
	<select id="selectProduct" resultType="java.util.Map" parameterType="java.util.Map">
	
	</select>
	<select id="productCount" resultType="int">
		SELECT COUNT(*) 
		FROM booking_product 
		WHERE booking_company_id = #{companyId}
	</select>
	
	
	<!-- 예약관리 -->
	<!-- 3) 취소 -->
	<insert id="insertBookingCancel">
		INSERT booking_cancel(booking_no, cancel_memo, cancel_subject) VALUES(#{bookingNo}, #{cancelMemo}, #{cancelSubject})
	</insert>
	
	<!-- 2) 변경 -->
	<update id="updateBooking" parameterType="goodee.gdj58.booking_c.vo.Booking">
		UPDATE booking SET booking_state = #{bookingState} WHERE booking_no = #{bookingNo}
	</update>
	
	<!-- 1) 목록 -->
	<select id="selectBooking" resultType="java.util.Map" parameterType="java.util.Map">
		SELECT
			b.booking_no bookingNo 
			, b.booking_state state
			, b.booking_company_id comId
			, c.customer_name cusName
			, c.customer_phone customerPh
			, b.booking_date date
			, bp.booking_product_name productName
			, bpo.booking_product_option_name optionName 
			, b.booking_people people
			, b.booking_total_price price
			, b.booking_request_date requestDate
		FROM booking b 
			INNER JOIN booking_product bp 
			ON b.product_no = bp.booking_product_no 
			INNER JOIN booking_product_option bpo 
			ON b.option_no = bpo.booking_product_option_no
			INNER JOIN customer c 
			ON b.customer_id = c.customer_id 
		WHERE b.booking_company_id = #{loginCom.companyId}
		ORDER BY b.booking_state ASC, b.booking_no DESC
	</select>
	<select id="bookingCount" resultType="int">
		SELECT COUNT(*) 
		FROM booking 
		WHERE booking_company_id = #{companyId}
	</select>
	
	<!-- 문의사항 -->
	<!-- 4) 상세보기 -->
	<select id="selectQuestionOne" resultType="java.util.Map">
		SELECT 
			q.question_no questionNo
			, q.question_title questionTitle
			, q.question_memo questionMemo
			, q.createdate questionCreatedate
			, qa.question_comment answer
			, qa.createdate answerCreatedate
		FROM question q 
			LEFT OUTER JOIN question_answer qa
			ON q.question_no = qa.question_no 
		WHERE q.question_no = #{questionNo}
	
	</select>
	
	<!-- 3) 삭제 -->
	<delete id="deleteQuestion" parameterType="int">
		DELETE FROM question WHERE question_no = #{questionNo}
	</delete>
	
	<!-- 2) 등록 -->	
	<insert id="insertQuestion" parameterType="goodee.gdj58.booking_c.vo.Question">
		INSERT question(question_title, question_memo, id) VALUES(#{questionTitle}, #{questionMemo}, #{id}) 
	</insert>
	
	<!-- 1) 목록 -->
	<select id="selectQuestion" resultType="java.util.Map" parameterType="java.util.Map">
		SELECT
			q.question_no questionNo 
			, q.question_title questionTitle
			, q.question_memo questionMemo
			, q.createdate
			, qa.question_comment questionComment
		FROM question q
			LEFT OUTER JOIN question_answer qa
			ON q.question_no = qa.question_no 
		WHERE q.id = #{loginCom.companyId}
		ORDER BY q.question_no DESC
		LIMIT #{beginRow}, #{rowPerPage}
	</select>
	<select id="questionCount" resultType="int">
		SELECT COUNT(*) 
		FROM question
		WHERE id = #{companyId}
	</select>
</mapper>